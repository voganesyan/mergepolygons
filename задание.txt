Общие замечания по выполнению тестового задания

 

Предлагая вам выполнить домашнее задание, мы хотим убедиться, что вы квалифицированный и творчески мыслящий человек, способный к профессиональному росту. Оценка вашей разработки складывается из двух составляющих – техническая и пользовательская.

С технической точки зрения мы хотим видеть:

    Хорошую архитектуру и дизайн программы
    Правильную реализацию алгоритмов
    Чистый и легко читаемый стиль кодирования
    Комментарии
    Обработку ошибочных ситуаций
    Качество вашего кода и его устойчивость является решающим фактором в принятии решения о приеме на работу.
    Краткое описание дизайна

Как пользователей нас волнуют следующие вопросы:

    Стандартный интерфейс Windows программ
    Поддержка управления мышью и клавиатурой
    Минимальные инструкции пользователя. Например, выплывающие объяснения для инструментов.
    Разумеется, все привыкли к тому, что продукты снабжены программой установки, но в данной ситуации мы будем благодарны, если будет возможно запустить программу из директории. Высылая нам результаты, поместите в ZIP архив исходные коды (включая файл проекта), папку с откомпилированной версией и вспомогательными данными (если требуется).
    Предварительно проверьте работоспособность программы на “чистом” компьютере, на котором не установлена используемая вами среда разработки. Убедитесь, что программа не использует зависимостей от внешних библиотек (за исключением стандартных, таких как .NET Framework).

Главное, что следует помнить при решении тестового задания – это то, что вы пишете его для себя, а не для нас. Решение тестового задания показывает, на что вы способны в данный момент. Поэтому следует крайне ответственно относиться к этому этапу. С другой стороны не отчаивайтесь, если что-то не получается. Если мы увидим в решении мысль, талант, и серьезное желание добиться цели, то остальному научим.

Задания даны в виде списка требований. Никаких детальных спецификаций. Мы оставляем вам возможность додумать необходимые детали.

 
Объединение полигонов

 

Язык: C++/C#/Java

Библиотеки для алгоритмической части не должны использоваться.

 

    Можно нарисовать в окне приложения два полигона с произвольным количеством точек.
    Можно отредактировать полигон – добавить или удалить точки.
    Полигон должен быть без самопересечений. Программа должна обнаруживать такую ситуацию.
    Программа должна находить объединение двух полигонов и рисовать его в окне приложения. Объединение полигонов должно само быть полигоном.
    Полигоны и их объединение можно вывести на печать.
    Есть возможность сохранять и загружать полигоны. В Базе данных и в файле на диске по выбору пользователя.

